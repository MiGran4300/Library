@model PaginatedList<Library.Models.Author>
@using Library.Areas.Identity.Data
@using Library.ViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<LibraryUser> signInManager;


@{
    ViewData["Title"] = "Index";
}

<h1>Автори</h1>

<p>
    <a class="nav-item" asp-action="Create"> Стани автор </a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Търси по име на автор: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Върни се към пълния списък</a>
        </p>
    </div>
</form>

<table class="table table-hover">
    <thead class="table-dark">
        <tr >
            <th>
                <a id="intext" asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]"
                asp-route-currentFilter="@ViewData["CurrentFilter"]" > Име </a>
            </th>
           
            <th>
                <a id="intext" asp-action="Index" asp-route-sortOrder="@ViewData["DepartmentSortParm"]"
                asp-route-currentFilter="@ViewData["CurrentFilter"]"> Специалност</a>
            </th>
            <th>
               Курс
            </th>
            <th>
                Имейл
            </th>
            <th>
               Телефон
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            
            <td>
                @Html.DisplayFor(modelItem => item.Department)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Grade)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @if (signInManager.IsSignedIn(User) && User.IsInRole("Admin"))
{
                <a asp-action="Edit" asp-route-id="@item.AuthorId">Edit</a> 
                <a asp-action="Details" asp-route-id="@item.AuthorId">Details</a> 
}
                <a asp-action="Delete" asp-route-id="@item.AuthorId">Delete</a>
            </td>
            
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Назад
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Напред
</a>
